apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven' // ADD THIS

group='com.github.tuandt-gem'

android {
    compileSdkVersion project.compileSdkVersion as int
    buildToolsVersion project.buildToolsVersion

    defaultConfig {
        minSdkVersion project.minSdkVersion as int
        targetSdkVersion project.targetSdkVersion as int
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            debuggable false
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:${supportLibraryVersion}"
    compile "com.android.support:support-v4:${supportLibraryVersion}"
    compile "com.android.support:design:${supportLibraryVersion}"
    compile "com.android.support:cardview-v7:${supportLibraryVersion}"
    compile "com.android.support:recyclerview-v7:${supportLibraryVersion}"
    compile "com.jakewharton:butterknife:${butterKnifeVersion}"
    compile "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    compile "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    compile "com.squareup.okhttp3:logging-interceptor:${okhttpLoggingInterceptorVersion}"
    compile "com.github.bumptech.glide:glide:${glideVersion}"
    compile "com.google.guava:guava:${guavaVersion}"
    compile 'org.modelmapper:modelmapper:+'

    // UI test
    compile "com.android.support.test.espresso:espresso-idling-resource:${espressoVersion}"
    // Resolve conflicts between main and test APK:
//    androidTestCompile "com.android.support:support-annotations:${supportLibraryVersion}
    compile 'org.apache.commons:commons-lang3:3.+'
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

// uncomment to build a jar file in addition to the default aar file
//android.libraryVariants.all { variant ->
//    def name = variant.buildType.name
//    def task = project.tasks.create "jar${name.capitalize()}", Jar
//    task.dependsOn variant.javaCompile
//    task.from variant.javaCompile.destinationDir
//    artifacts.add('archives', task);
//}

